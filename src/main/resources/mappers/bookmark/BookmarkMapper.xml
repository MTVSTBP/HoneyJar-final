<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tbp.honeyjar.bookmark.dao.BookmarkMapper">

    <resultMap id="bookmarkResultMap" type="com.tbp.honeyjar.bookmark.dto.BookmarkDTO">
        <id property="postId" column="post_id"/>
        <id property="userId" column="user_id"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
    </resultMap>

    <resultMap id="postListResultMap" type="com.tbp.honeyjar.post.dto.PostListDTO">
        <id property="postId" column="post_id"/>
        <result property="postTitle" column="title"/>
        <result property="post" column="post"/>
        <result property="mainImageUrl" column="main_image_url"/>
        <result property="bookmarked" column="bookmarked"/>
        <result property="categoryId" column="category_id"/>
        <result property="userName" column="user_name"/>
        <!-- <result property="profileImg" column="profile_img"/> -->
    </resultMap>

    <!-- 북마크 조회 -->
    <select id="findBookmarkByPostIdAndUserId" resultType="com.tbp.honeyjar.bookmark.dto.BookmarkDTO">
        SELECT post_id, user_id, created_at, updated_at
        FROM bookmark
        WHERE post_id = #{postId} AND user_id = #{userId}
    </select>

    <!-- 북마크 추가 -->
    <insert id="insertBookmark">
        INSERT INTO bookmark (post_id, user_id, created_at, updated_at)
        VALUES (#{postId}, #{userId}, NOW(), NOW())
    </insert>

    <!-- 북마크 삭제 -->
    <delete id="deleteBookmark">
        DELETE FROM bookmark
        WHERE post_id = #{postId} AND user_id = #{userId}
    </delete>

    <select id="findBookmarkedPostsByUserId" resultMap="postListResultMap">
        SELECT
        p.post_id,
        p.title,
        p.post,
        i.url AS main_image_url,
        u.name AS user_name,
        true AS bookmarked,
        p.category_id
        FROM post p
        LEFT JOIN bookmark b ON p.post_id = b.post_id
        LEFT JOIN image i ON p.post_id = i.post_id AND i.is_main = 1
        LEFT JOIN user u ON p.user_id = u.user_id
        WHERE p.deleted = FALSE AND b.user_id = #{userId}
        <if test="category != null">
            AND p.category_id = #{category}
        </if>
        ORDER BY p.created_at DESC
    </select>
</mapper>
